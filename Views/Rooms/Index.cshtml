@model RoomRental.ViewModels.RoomsViewModel
@{
    ViewData["Title"] = "Rooms";
    string buildingNameFind = Model.FilterViewModel.BuildingNameFind;
    decimal? areaFind = Model.FilterViewModel.AreaFind;
}


<div class="index-container">
    <div class="form-container">
        <div class="tabs">
            <h3>Фильтрация</h3>
            <div><a asp-action="Create">Создать</a></div>
        </div>
        <div class="form-container_two">
            <form method="get" asp-action="Filter">
                <input class="filter-input" name="BuildingNameFind" value="@buildingNameFind" placeholder="Название здания" />

                <input class="filter-input" type="text" step="any" name="AreaFind" value="@(areaFind)" placeholder="Площадь" oninput="this.value = this.value.replace(/[^0-9,]/g, '')" />

                <input class="filter-input" type="hidden" name="sortOrder" value="@Model.SortViewModel.Current" />
                <input class="submitButton-index" type="submit" value="Поиск" />
            </form>
        </div>
    </div>

    <div class="table-container">
        <h1>Помещения</h1>
        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th class="element">
                            <a asp-action="Index"
                               asp-route-sortOrder="@(Model.SortViewModel.BuildingNameSort)"
                               asp-route-buildingNameFind="@buildingNameFind"
                               asp-route-areaFind="@areaFind">
                                @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().Building)
                            </a>
                        </th>
                        <th class="element">
                            @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().RoomNumber)
                        </th>
                        <th class="element">
                            <a asp-action="Index"
                               asp-route-sortOrder="@(Model.SortViewModel.AreaSort)"
                               asp-route-buildingNameFind="@buildingNameFind"
                               asp-route-areaFind="@areaFind">
                                @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().Area)
                            </a>
                        </th>
                        <th class="element">
                            @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().Description)
                        </th>
                        <th class="element">
                            @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().RoomImages)
                        </th>
                        <th class="element"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Rooms)
                    {
                        <tr class="row" onclick="location.href='@Url.Action("Details", "Rooms", new { id = item.RoomId })'">
                            <td class="element">
                                @Html.DisplayFor(modelItem => item.Building.Name)
                            </td>
                            <td class="element">
                                @Html.DisplayFor(modelItem => item.RoomNumber)
                            </td>
                            <td class="element">
                                @Html.DisplayFor(modelItem => item.Area)
                            </td>
                            <td class="element">
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td class="element">
                                <img src="@item.RoomImages.First().ImagePath" class="image">
                            </td>
                            <td class="element">
                                <a class="btn-primary btn" asp-action="Edit" asp-route-id="@item.RoomId">Изменить</a> |
                                @* <a class="btn-secondary btn" asp-action="Details" asp-route-id="@item.RoomId">Подробнее</a> | *@
                                <a class="btn-danger btn" asp-action="Delete" asp-route-id="@item.RoomId">Удалить</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <page-link page-model="Model.PageViewModel" page-action="Index"
                   page-url-sortOrder="@(Model.SortViewModel.Current)"
                   page-url-buildingNameFind="@buildingNameFind"
                   page-url-areaFind="@areaFind"></page-link>
    </div>
</div>

@* 
<h1>Rooms</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form method="post">
    <label>Название здания: </label>
    <input name="BuildingNameFind" value="@buildingNameFind" />

    <label>Площадь: </label>
    <input type="number" step="any" min="0" name="AreaFind" value="@(areaFind.ToString().Replace(",", "."))" />

    <input type="hidden" name="sortOrder" value="@Model.SortViewModel.Current" />
    <input type="submit" value="Фильтр" />
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.BuildingNameSort)"
                   asp-route-buildingNameFind="@buildingNameFind"
                   asp-route-areaFind="@areaFind">
                    @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().Building)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().RoomNumber)
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@(Model.SortViewModel.AreaSort)"
                   asp-route-buildingNameFind="@buildingNameFind"
                   asp-route-areaFind="@areaFind">
                    @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().Area)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rooms.SingleOrDefault().RoomImages)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Rooms) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Building.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoomNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Area)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                <img src="@item.RoomImages.First().ImagePath" class="image">
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.RoomId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.RoomId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.RoomId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<page-link page-model="Model.PageViewModel" page-action="Index"
           page-url-sortOrder="@(Model.SortViewModel.Current)"
           page-url-buildingNameFind="@buildingNameFind"
           page-url-areaFind="@areaFind"></page-link> *@